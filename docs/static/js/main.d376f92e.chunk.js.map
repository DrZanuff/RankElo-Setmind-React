{"version":3,"sources":["App.js","index.js"],"names":["Header","props","state","currentPage","elements","Wolf","error","isLoaded","data","fetch","then","response","json","result","setState","value","this","showSpin","className","id","type","name","onClick","clicked","Eagle","Bear","Lion","Dragon","role","Page","React","Component","bg","badge","title","onLoad","src","LineElement","pos","TitleElement","size","formatEntrySize","length","visible","DataBody","content","i","push","Entry","key","points","h","height","fontsize","fontSize","generateTemplate","style","len","num","a","b","Math","max","min","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d376f92e.chunk.js","sourcesContent":["import React from 'react';\n// import './App.css';\n\nclass Header extends React.Component{\n\n  constructor(props){\n      super(props)\n      this.state = { \n          currentPage : elements.Wolf,\n          error : null,\n          isLoaded : false,\n          data : {}\n      }\n  }\n\n  componentDidMount(){\n      fetch(\"https://script.google.com/macros/s/AKfycbxzZmE--TzcbE6VnHaFGjbjwwXXeVQ6U4jiSbNcDIZGq83NBSUN/exec\")\n      .then( response => response.json() )\n      .then( result =>{ this.setState( {isLoaded : true, data : result } ) }\n      )\n  }\n\n  clicked(value){\n      this.setState( {currentPage : value} )\n      showSpin(true)\n  }\n\n  render(){\n      return(\n          <div>\n              <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n\n              <div className=\"mx-auto d-sm-flex d-block flex-sm-nowrap\">\n                  <ul id=\"bar\" className=\"navbar-nav mr-auto\">\n\n                  <li className=\"nav-item\">\n                      <button\n                      type=\"button\" name=\"button\" className=\"btn btn-dark\"\n                      onClick={ () => { this.clicked(elements.Wolf) } }>\n                      Lobo</button>\n                  </li>\n\n                  <li className=\"nav-item\">\n                      <button\n                      type=\"button\" name=\"button\" className=\"btn btn-dark\"\n                      onClick={ () => { this.clicked(elements.Eagle) } }>\n                      Águia</button>\n                  </li>\n\n                  <li className=\"nav-item\">\n                      <button\n                      type=\"button\" name=\"button\" className=\"btn btn-dark\"\n                      onClick={ () => { this.clicked(elements.Bear) } }>\n                      Urso</button>\n                  </li>\n\n                  <li className=\"nav-item\">\n                      <button\n                      type=\"button\" name=\"button\" className=\"btn btn-dark\"\n                      onClick={ () => { this.clicked(elements.Lion) } }>\n                      Leão</button>\n\n                  </li>\n\n                  <li className=\"nav-item\">\n                      <button\n                      type=\"button\" name=\"button\" className=\"btn btn-dark\"\n                      onClick={ () => { this.clicked(elements.Dragon) } }>\n                      Dragão</button>\n                  </li>\n\n                  </ul>\n              </div>\n\n          </nav>\n\n          <div id=\"spinLoad\">\n                  <div className=\"spinner-grow text-light\" role=\"status\" />\n          </div>\n\n          <div>\n              {\n              this.state.isLoaded ? \n              <Page value={this.state.currentPage} data={this.state.data} /> :\n              <div id=\"spin\">\n                  <div className=\"spinner-border text-light\" role=\"status\" />\n              </div>\n              \n               }\n              \n          </div>\n\n      </div>\n\n      )\n  }\n}\n\nvar elements = {\n  Wolf   : {bg:\"img/bg/Wolf.png\"   , badge:\"img/badges/Wolf.png\"   , title:\"img/titles/Wolf.png\"  , name:\"Wolf\"  },\n  Eagle  : {bg:\"img/bg/Eagle.png\"  , badge:\"img/badges/Eagle.png\"  , title:\"img/titles/Eagle.png\" , name:\"Eagle\" },\n  Bear   : {bg:\"img/bg/Bear.png\"   , badge:\"img/badges/Bear.png\"   , title:\"img/titles/Bear.png\"  , name:\"Bear\"  },\n  Lion   : {bg:\"img/bg/Lion.png\"   , badge:\"img/badges/Lion.png\"   , title:\"img/titles/Lion.png\"  , name:\"Lion\"  },\n  Dragon : {bg:\"img/bg/Dragon.png\" , badge:\"img/badges/Dragon.png\" , title:\"img/titles/Dragon.png\", name:\"Dragon\"}\n}\n\nfunction Page(props){\n\n  const bg = (\n              <div className=\"bg\">\n                  <div className=\"line\">\n                      <hr/>\n                  </div>\n                  <img className=\"bgImg\" onLoad={ showSpin(false) } src={props.value.bg} />\n                  <div className=\"badge\" >\n                      <img src={props.value.badge} />\n                  </div> \n                  <div className=\"title\">\n                      <img src={props.value.title} />\n                  </div>\n                  <LineElement pos={\"Up\"}/>\n                  <TitleElement />\n                  <LineElement pos={\"Bot\"}/>\n                  <DataBody data={props.data[props.value.name]} size={ formatEntrySize(props.data[props.value.name].length )}/>\n                 \n                  \n\n              </div>\n  )\n\n  return(\n      bg\n  )\n}\n\nfunction showSpin(visible){\n  if (visible){\n      //$(\".spinLoad\").css(\"display\",\"none\")\n  }\n  else{\n      //$(\".spinLoad\").css(\"display\",\"unset\")\n  }\n}\n\nfunction LineElement(props){\n  return(\n  <div className={ props.pos == \"Up\" ? \"titleLineUp\" : \"titleLineBot\"}>\n       <hr/>\n   </div>\n  )\n}\n\nfunction TitleElement(){\n  return(\n      <div className=\"title-bar font\">\n          <h1>#</h1>\n          <h1>Nome</h1>\n          <h1>Pontos</h1>\n      </div>\n  )\n}\n\nclass DataBody extends React.Component{\n  constructor(props){\n      super(props);\n  }\n  \n\n  render(props){\n      return(\n          <div className=\"dataBody\">\n              {generateTemplate(this.props.data , this.props.size)}\n          </div>\n      )\n  }\n}\n\nfunction Entry(props){\n  return(\n      <div style={ {height:props.h} } className={\"entry \" + props.value}>\n          <h1 style={ {fontSize:props.fontsize} } >{props.pos}</h1>\n          <h1 style={ {fontSize:props.fontsize} }  >{props.name}</h1>\n          <h1 style={ {fontSize:props.fontsize} } >{props.points}</h1>\n          <img className=\"bgImgLine\" src=\"img/bgline.png\" />\n      </div>\n  )\n}\n\nfunction generateTemplate(data , size){\n  let content = []\n  for (let i = 0; i < data.length ; i++){\n      if (i % 2 == 0){\n          content.push(\n              <Entry\n              key={i}\n              pos={i+1}\n              name={data[i][0]}\n              points={data[i][1]}\n              value=\"strong\"\n              h={ size.height }\n              fontsize={size.fontSize} />\n          )\n      }\n      else{\n          content.push(\n          <Entry\n          key={i}\n          pos={i+1}\n          name={data[i][0]}\n          points={data[i][1]}\n          value=\"light\"\n          h={ size.height }\n          fontsize={size.fontSize} />\n          )\n      }\n  }\n\n  return content\n}\n\n\nfunction formatEntrySize(len){\n  let total = 1300\n  let size = len\n  const clampNumber = (num, a, b) => Math.max(Math.min(num, Math.max(a, b)), Math.min(a, b));\n\n  let styles = {height:(total/size) , fontSize : clampNumber( (total/size) * 40 , 30 , 50)  }\n  return styles \n}\n\nclass App extends React.Component{\n\n  render(){\n      return(\n          <Header />\n      )\n  }\n  \n}\n\n// ReactDOM.render(\n//   <App /> , document.getElementById(\"root\")\n// )\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}